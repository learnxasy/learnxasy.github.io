{"version":3,"sources":["webpack:///./src/components/embeds/kotlinplay.js","webpack:///./src/components/renderAst.js","webpack:///./src/templates/lesson.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["KotlinPlayground","_ref2","src","height","Object","core_browser_esm","title","width","startsWith","css","_ref","renderAst","RehypeReact","createElement","React","components","kotlin-playground","Compiler","query","__webpack_exports__","context","data","markdownRemark","layout","x","fields","learn","y","as","gatsby_browser_entry","to","lesson_ref","frontmatter","lessonNumber","htmlAst","m","module","exports","require","default","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","InternalPageRenderer","assign","json","propTypes","shape","pathname","X","styled_base_browser_esm","target","name","styles","Y","linkStyle","Header","_ref4","header_ref2","_ref3","replace","defaultProps","Layout","children","react_default","a","Fragment","header","layout_ref","Date","getFullYear","href","node"],"mappings":"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","file":"component---src-templates-lesson-js-ef63dabfad02ad604cfd.js","sourcesContent":["import React from \"react\";\nimport css from \"@emotion/css\";\n\nconst KotlinPlayground = ({ src, height }) => (\n  <iframe \n    title={`Kotlin Playground (${src})`}\n    height={ height || 180} \n    width=\"100%\" \n    src={ src.startsWith(\"http\") ? src : `https://pl.kotl.in/${src}?theme=darcula`} \n    css={css`border: none;`}\n  >\n  </iframe>\n);\n\nexport default KotlinPlayground;","import React from \"react\";\nimport RehypeReact from \"rehype-react\";\n\nimport KotlinPlayground from \"./embeds/kotlinplay\";\n\nconst renderAst = new RehypeReact({\n  createElement: React.createElement,\n  components: {\n    \"kotlin-playground\": KotlinPlayground\n  }\n}).Compiler;\n\nexport default renderAst;","import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport { css } from \"@emotion/core\";\n\nimport Layout from \"../components/layout\";\nimport renderAst from \"../components/renderAst\";\n\nexport default ({ data: { markdownRemark: context } }) => (\n  <Layout x={context.fields.learn} y={context.fields.as}>\n    <Link to={`/learn/${context.fields.learn}/as/${context.fields.as}`}>Back to lessons</Link>\n    <div\n      css={css`\n        margin-top: 25px;\n      `}\n    >\n      <h1>Lesson {context.frontmatter.lessonNumber}: {context.frontmatter.title}</h1>\n      <div>{renderAst(context.htmlAst)}</div>\n    </div>\n  </Layout>\n);\n\nexport const query = graphql`\n  query($learn: String!, $as: String!, $lesson: String!) {\n    markdownRemark(fields: { learn: { eq: $learn }, as: { eq: $as }, lesson: { eq: $lesson } }) {      \n      htmlAst\n      frontmatter {\n        title\n        lessonNumber\n      }\n      fields {\n        learn\n        as\n      }\n    }  \n  }\n`;","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { css } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport { Link } from \"gatsby\";\n\nconst X = styled.span`\n  color: red;\n`;\n\nconst Y = styled.span`\n  color: green;\n`;\n\nconst linkStyle = css`\n  text-decoration: none;\n  color: inherit;\n`;\n\nconst Header = ({ x, y }) => (\n  <header\n    css={css`\n      margin-bottom: 1.45rem;\n    `}\n  >\n    <div\n      css={css`\n        margin: 0 auto;\n        max-width: 960px;\n        padding: 1.45rem 1.0875rem;\n      `}\n    >\n      <h1\n        css={css`\n          margin: 0;\n          color: #333;\n          text-decoration: none;\n        `}\n      >\n        <Link to=\"/\" css={linkStyle}>learn</Link>&nbsp;\n        <Link to={x === `x` ? `/learn` : `/learn/${x}`} css={linkStyle}><X>{x.replace(`-`, ` `)}</X></Link> as&nbsp;\n        <Link to={x === `x` ? `/learn` : (y === `y` ? `/learn/${x}` : `/learn/${x}/as/${y}`)} css={linkStyle}><Y>{y.replace(`-`, ` `)}</Y></Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  x: PropTypes.string,\n  y: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  x: `x`,\n  y: `y`,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { css } from \"@emotion/core\";\n\nimport Header from \"./header\";\nimport \"./layout.css\";\n\nconst Layout = ({ x, y, children }) => {\n  return (\n    <>\n      <Header x={x} y={y} />\n      <div\n        css={css`\n          margin: 0 auto;\n          max-width: 960px;\n          padding: 0 1.0875rem 1.45rem;\n          padding-top: 0;\n        `}\n      >\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}